(ns corpsfini.cyclic-examples
    (:require [clojure.math.numeric-tower :as nt]))
;    (:require [corpsfini.finitefield :as ff])

;; Experiments around with examples of cyclic groups, etc.
;; Related stuff can be found in corpsfini.finitefield and 
;; corpsfini.finitefield-examples using polynomials.
;; Here were' using integers, so all fields have to be prime fields
;; but groups of course don't have to be prime order.

(defn g37
  "Generate next element of a multiplicative group over mod 37 numbers 
  using generator multiplied by previous element prev."
  [generator prev]
  (mod (* generator prev) 37))

(def xs36g5 
  "Sequence of mod 37 numbers in a group of order 36 generated by the
  element 5.  The group contains the integers 1 through 36.  (5 works 
  as a generator since it's relatively prime to 36 = 2^2 * 3^2.)"
  (iterate (partial g37 5) 1))

;; This has size suborder(36,2) = 18
(def xs18g25 (iterate (partial g37 (nt/expt 5 2)) 1))

;; This has size suborder(36,3) = 12
(def xs12g125 (iterate (partial g37 (nt/expt 5 3)) 1))
